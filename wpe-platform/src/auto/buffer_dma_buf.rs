// This file was generated by gir (https://github.com/gtk-rs/gir)
// from /usr/share/gir-1.0
// from ../gir-files
// DO NOT EDIT

use glib::prelude::*;
use glib::translate::*;

use crate::{ffi, Buffer, View};

glib::wrapper! {
    #[doc(alias = "WPEBufferDMABuf")]
    pub struct BufferDMABuf(Object<ffi::WPEBufferDMABuf, ffi::WPEBufferDMABufClass>) @extends Buffer;

    match fn {
        type_ => || ffi::wpe_buffer_dma_buf_get_type(),
    }
}

impl BufferDMABuf {
    // rustdoc-stripper-ignore-next
    /// Creates a new builder-pattern struct instance to construct
    /// [`BufferDMABuf`] objects.
    ///
    /// This method returns an instance of
    /// [`BufferDMABufBuilder`](crate::builders::BufferDMABufBuilder) which can
    /// be used to create [`BufferDMABuf`] objects.
    pub fn builder() -> BufferDMABufBuilder {
        BufferDMABufBuilder::new()
    }

    #[doc(alias = "wpe_buffer_dma_buf_get_fd")]
    #[doc(alias = "get_fd")]
    pub fn fd(&self, plane: u32) -> i32 {
        unsafe { ffi::wpe_buffer_dma_buf_get_fd(self.to_glib_none().0, plane) }
    }

    #[doc(alias = "wpe_buffer_dma_buf_get_format")]
    #[doc(alias = "get_format")]
    pub fn format(&self) -> u32 {
        unsafe { ffi::wpe_buffer_dma_buf_get_format(self.to_glib_none().0) }
    }

    #[doc(alias = "wpe_buffer_dma_buf_get_modifier")]
    #[doc(alias = "get_modifier")]
    pub fn modifier(&self) -> u64 {
        unsafe { ffi::wpe_buffer_dma_buf_get_modifier(self.to_glib_none().0) }
    }

    #[doc(alias = "wpe_buffer_dma_buf_get_n_planes")]
    #[doc(alias = "get_n_planes")]
    pub fn n_planes(&self) -> u32 {
        unsafe { ffi::wpe_buffer_dma_buf_get_n_planes(self.to_glib_none().0) }
    }

    #[doc(alias = "wpe_buffer_dma_buf_get_offset")]
    #[doc(alias = "get_offset")]
    pub fn offset(&self, plane: u32) -> u32 {
        unsafe { ffi::wpe_buffer_dma_buf_get_offset(self.to_glib_none().0, plane) }
    }

    #[doc(alias = "wpe_buffer_dma_buf_get_stride")]
    #[doc(alias = "get_stride")]
    pub fn stride(&self, plane: u32) -> u32 {
        unsafe { ffi::wpe_buffer_dma_buf_get_stride(self.to_glib_none().0, plane) }
    }
}

// rustdoc-stripper-ignore-next
/// A [builder-pattern] type to construct [`BufferDMABuf`] objects.
///
/// [builder-pattern]: https://doc.rust-lang.org/1.0.0/style/ownership/builders.html
#[must_use = "The builder must be built to be used"]
pub struct BufferDMABufBuilder {
    builder: glib::object::ObjectBuilder<'static, BufferDMABuf>,
}

impl BufferDMABufBuilder {
    fn new() -> Self {
        Self { builder: glib::object::Object::builder() }
    }

    pub fn height(self, height: i32) -> Self {
        Self { builder: self.builder.property("height", height) }
    }

    pub fn view(self, view: &impl IsA<View>) -> Self {
        Self { builder: self.builder.property("view", view.clone().upcast()) }
    }

    pub fn width(self, width: i32) -> Self {
        Self { builder: self.builder.property("width", width) }
    }

    // rustdoc-stripper-ignore-next
    /// Build the [`BufferDMABuf`].
    #[must_use = "Building the object from the builder is usually expensive and is not expected to \
                  have side effects"]
    pub fn build(self) -> BufferDMABuf {
        self.builder.build()
    }
}

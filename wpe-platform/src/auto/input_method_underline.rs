// This file was generated by gir (https://github.com/gtk-rs/gir)
// from /usr/share/gir-1.0
// from ../gir-files
// DO NOT EDIT

use glib::translate::*;

use crate::{ffi, Color};

glib::wrapper! {
    #[derive(Debug, PartialEq, Eq, PartialOrd, Ord, Hash)]
    pub struct InputMethodUnderline(Boxed<ffi::WPEInputMethodUnderline>);

    match fn {
        copy => |ptr| ffi::wpe_input_method_underline_copy(mut_override(ptr)),
        free => |ptr| ffi::wpe_input_method_underline_free(ptr),
        type_ => || ffi::wpe_input_method_underline_get_type(),
    }
}

impl InputMethodUnderline {
    #[doc(alias = "wpe_input_method_underline_new")]
    pub fn new(start_offset: u32, end_offset: u32) -> InputMethodUnderline {
        unsafe { from_glib_full(ffi::wpe_input_method_underline_new(start_offset, end_offset)) }
    }

    #[doc(alias = "wpe_input_method_underline_get_color")]
    #[doc(alias = "get_color")]
    pub fn color(&mut self) -> Option<Color> {
        unsafe {
            from_glib_none(ffi::wpe_input_method_underline_get_color(self.to_glib_none_mut().0))
        }
    }

    #[doc(alias = "wpe_input_method_underline_get_end_offset")]
    #[doc(alias = "get_end_offset")]
    pub fn end_offset(&mut self) -> u32 {
        unsafe { ffi::wpe_input_method_underline_get_end_offset(self.to_glib_none_mut().0) }
    }

    #[doc(alias = "wpe_input_method_underline_get_start_offset")]
    #[doc(alias = "get_start_offset")]
    pub fn start_offset(&mut self) -> u32 {
        unsafe { ffi::wpe_input_method_underline_get_start_offset(self.to_glib_none_mut().0) }
    }

    #[doc(alias = "wpe_input_method_underline_set_color")]
    pub fn set_color(&mut self, color: Option<&Color>) {
        unsafe {
            ffi::wpe_input_method_underline_set_color(
                self.to_glib_none_mut().0,
                color.to_glib_none().0,
            );
        }
    }
}

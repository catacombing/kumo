// This file was generated by gir (https://github.com/gtk-rs/gir)
// from /usr/share/gir-1.0
// from ../gir-files
// DO NOT EDIT

use glib::prelude::*;
use glib::translate::*;

use crate::ffi;

glib::wrapper! {
    #[doc(alias = "WPEViewAccessible")]
    pub struct ViewAccessible(Interface<ffi::WPEViewAccessible, ffi::WPEViewAccessibleInterface>);

    match fn {
        type_ => || ffi::wpe_view_accessible_get_type(),
    }
}

impl ViewAccessible {
    pub const NONE: Option<&'static ViewAccessible> = None;
}

pub trait ViewAccessibleExt: IsA<ViewAccessible> + 'static {
    #[doc(alias = "wpe_view_accessible_bind")]
    fn bind(&self, plug_id: &str) {
        unsafe {
            ffi::wpe_view_accessible_bind(self.as_ref().to_glib_none().0, plug_id.to_glib_none().0);
        }
    }
}

impl<O: IsA<ViewAccessible>> ViewAccessibleExt for O {}

// This file was generated by gir (https://github.com/gtk-rs/gir)
// from /usr/share/gir-1.0
// from ../gir-files
// DO NOT EDIT

use glib::translate::*;

use crate::ffi;

glib::wrapper! {
    #[derive(Debug, PartialEq, Eq, PartialOrd, Ord, Hash)]
    pub struct Color(Boxed<ffi::WebKitColor>);

    match fn {
        copy => |ptr| glib::gobject_ffi::g_boxed_copy(ffi::webkit_color_get_type(), ptr as *mut _) as *mut ffi::WebKitColor,
        free => |ptr| glib::gobject_ffi::g_boxed_free(ffi::webkit_color_get_type(), ptr as *mut _),
        type_ => || ffi::webkit_color_get_type(),
    }
}

impl Color {
    #[doc(alias = "webkit_color_parse")]
    pub fn parse(&mut self, color_string: &str) -> bool {
        unsafe {
            from_glib(ffi::webkit_color_parse(
                self.to_glib_none_mut().0,
                color_string.to_glib_none().0,
            ))
        }
    }
}
